/*  https://github.com/UN7FGO/CS_Simple_Games
    
    Шестая игра-головоломка - кодовый замок или СЕЙФ.
    Суть игры: 
    Кодовый замок состоит из 16 переключателей, расположенных квадратом в 4 строки и 4 столбца. 
    Как только Вы поворачиваете какой-либо переключатель, вместе сним поворачиваются все переключатели
    в том же столбце и строке.
    Задача, перевести все переключатели в "выключенное" состояние.
    Состояние переключателей:  [-] - выключен, [Х] - включен

    Мы будем использовать новые конструкции языка C#, такие как:
    - int[,] - определение двумерного массива и работа с ним
    - void - научимся создавать методы, которые возвращают значения или которые не возвращают значения
*/

// создаем двумерный массив для игрового поля, с уже заданной комбинацией замков
// 0 - замок открыт, 1 - замок закрыт
int[,] pole = new int[4, 4] { { 1, 0, 0, 1 },
                              { 0, 1, 0, 0 },
                              { 0, 0, 1, 0 },
                              { 0, 0, 0, 1 },};
// ответ игрока
int answer = 0;
// выбранный замок для поворота
int x = 0;
int y = 0;
// счетчих ходов игрока
int count = 0;

// выводим на экран правила игры
Console.Clear();
Console.WriteLine("Головоломка 'СЕЙФ'");
Console.WriteLine();
Console.WriteLine("Чтобы открыть сейф, нужно открыть все 16 замков.");
Console.WriteLine("Как только Вы поворачиваете какой-либо из замков,");
Console.WriteLine("вместе с ним поворачиваются все замки в той же строке и том же столбце. ");
Console.WriteLine("Задача - перевести все замки в открытое положение.");
Console.WriteLine("Состояние замков = [-] - открыт, [Х] - закрыт");
Console.WriteLine();

// пока не все замки открыты, играем
while (CalculateSummElements(pole) > 0)
{
    PrintPole(pole);
    Console.WriteLine();
    count++;
    x = 0;
    y = 0;
    // пока игрок не введет правильный номер замка, повторяем ввод
    while (x < 1 || x > 4 || y < 1 || y > 4)
    {
        Console.WriteLine($"Ход - {count}.");
        Console.Write("Введите номер замка (строка и столбец, двузначное число, 99-выход) :");
        answer = Convert.ToInt32(Console.ReadLine());
        y = answer / 10;
        x = answer % 10;
        if (answer == 99) break;
    }
    // если игрок "сдался" выходим из игры
    if (answer == 99) break;
    // так как индексы массива начинаются с "нуля" то уменьшим наши координаты на 1
    x--;
    y--;
    // "переворачиваем" замки в выбранной строке и в столбце
    for (int i = 0; i < pole.GetLength(0); i++)
        for (int j = 0; j < pole.GetLength(1); j++)
            if (i == y || j == x) pole[i, j] = Math.Abs(pole[i, j] - 1);
}
// Поздравляем игрока с победой или не поздравдляем
PrintPole(pole);
Console.WriteLine();
if (CalculateSummElements(pole) == 0)
{
    Console.WriteLine("ПОЗДРАВЛЯЮ! Вам удалось открыть сейф!");
    Console.WriteLine("В глубине сейфа Вы обнаружили 1837 тугриков, можете забрать их себе в качестве награды.");
}
else
{
    Console.WriteLine("Жаль что Вы сдались так рано...");
    Console.WriteLine("А ведь в сейфе могло лежать какое-нибудь сокровище.");
}


// ----- Дальше идет описание методов, используемых в программе

// считаем сумму всех элементов массива
int CalculateSummElements(int[,] arr)
{
    int summ = 0;
    for (int i = 0; i < arr.GetLength(0); i++)
        for (int j = 0; j < arr.GetLength(1); j++)
            summ += arr[i, j];
    return summ;
}

// делаем универсальный метод, для вывода на экран поля произвольных размеров
void PrintPole(int[,] arr)
{
    Console.Write("  ");
    for (int i = 0; i < arr.GetLength(1); i++) Console.Write($"  {i + 1} ");
    Console.WriteLine();
    for (int i = 0; i < arr.GetLength(0); i++)
    {
        Console.Write($"{i + 1} ");
        for (int j = 0; j < arr.GetLength(1); j++)
            if (arr[i, j] == 1) Console.Write($" [X]");
            else Console.Write($" [-]");
        Console.WriteLine();
    }
}